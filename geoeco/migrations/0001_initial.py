# Generated by Django 5.0.6 on 2025-10-20 14:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sustainability_score', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Mineral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('unit', models.CharField(default='ton', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('active', 'نشط'), ('proposed', 'مقترح'), ('closed', 'منتهي')], default='proposed', max_length=50)),
                ('sustainability_band', models.CharField(choices=[('green', 'أخضر'), ('yellow', 'أصفر'), ('red', 'أحمر')], default='yellow', max_length=10)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('governorate', models.CharField(default='', max_length=100)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geoeco.company')),
                ('mineral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geoeco.mineral')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_no', models.CharField(max_length=100)),
                ('issued_on', models.DateField()),
                ('expires_on', models.DateField()),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licenses', to='geoeco.site')),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentalMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('air_quality_index', models.FloatField(blank=True, null=True)),
                ('water_tds', models.FloatField(blank=True, null=True)),
                ('rehabilitation_progress', models.FloatField(default=0)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='env', to='geoeco.site')),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(choices=[('info', 'Info'), ('warn', 'Warn'), ('critical', 'Critical')], default='info', max_length=10)),
                ('message', models.TextField()),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='geoeco.site')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('quantity', models.FloatField()),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production', to='geoeco.site')),
            ],
            options={
                'unique_together': {('site', 'year')},
            },
        ),
    ]
